function sayHello(name){console.log(`Hello ${name}!!!`)}function sayHello(name){console.log(`Hello ${name} !!!`)}function sayCityName(name,city){console.log(`Awesome!!! ${name}, you are living in awesome city     ${city}!.`)}module.exports=sayHello,module.exports={sayHello:sayHello,sayCityName:sayCityName};const os=require("os"),osInfo={type:os.type(),uptime:os.uptime(),freeMemory:os.freemem()},path=(module.exports=osInfo,require("path")),filePath=path.join("/content","article","article.txt"),resolvedPath=(console.log(path.basename(filePath)),console.log(path.isAbsolute(filePath)),path.resolve(__dirname,"content","article","first-article.txt")),{readFile,writeFile}=(console.log(resolvedPath),require("fs")),{readFileSync,writeFileSync}=(readFile("./content/article/first-article.txt","utf8",(error,result)=>{error&&console.log("error: ",error),readFile("./content/article/second-article.txt","utf8",(error,result2)=>{error&&console.log("error: ",error),writeFile("./content/result.txt",`This is final result: ${result}, `+result2,(error,finalResult)=>{error&&console.log("error: ",error),console.log("final result ",finalResult)})})}),require("fs")),result1=readFileSync("./content/article/first-article.txt","utf8"),result2=readFileSync("./content/article/second-article.txt","utf8"),result=writeFileSync("./content/result.txt",`The result is: ${result1}, `+result2,"utf8"),appendedRes=writeFileSync("./content/result.txt","I am being appended",{flag:"a+"}),{readFile,writeFile}=(console.log("something happened or not"),console.log(appendedRes),console.log("something happened or not2"),require("fs")),getFileText=fileUrl=>new Promise((resolve,reject)=>{readFile(fileUrl,"utf8",(err,data)=>{err&&reject(err),resolve(data)})}),result1=getFileText("./content/article/first-article.txt"),result2=(result1.then(result=>console.log("first result ",result)),getFileText("./content/article/second-article.txt")),{readFile,writeFile}=(result2.then(result=>console.log("second result: ",result)),require("fs")),getFileText=fileUrl=>new Promise((resolve,reject)=>{readFile(fileUrl,"utf8",(err,data)=>{err&&reject(err),resolve(data)})}),result1=getFileText("./content/article/first-article.txt"),result2=(result1.then(result=>console.log("First result: ",result)),getFileText("./content/article/second-article.txt"));result2.then(result=>console.log("Second result: ",result)),module.exports=function(grunt){grunt.initConfig({uglify:{options:{mangle:!1},my_target:{files:{"output.min.js":["*.js"]}}}}),grunt.loadNpmTasks("grunt-contrib-uglify")};